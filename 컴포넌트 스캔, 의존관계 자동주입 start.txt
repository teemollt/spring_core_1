4가지 의존관계 주입 방법
1. 생성자 주입
2. 수정자 주입(setter)
3. 필드 주입
4. 일반 메서드 주입

1. 생성자 주입
- 생성자를 통해 의존관계 주입
- 특징
    a. 생성자 호출시점에 딱 1번만 호출되는 것 보장.
    b. 불변, 필수 의존관계에 사용
    c. 생성자가 딱 1개만 있으면 @Autowired 생략해도 자동 주입됨(스프링빈인 클래스에 한해..)

2. 수정자 주입(setter)
- setter 수정자 메서드로 필드의 값을 변경해 의존관계를 주입
- 특징
    a. 선택, 변경 가능성이 있는 의존관계에서 사용
    b. 자바빈 프로퍼티 규약의 수정자 메서드 방식을 사용하는 방법임.(setter, getter)
    c. @Autowired의 기본동작은 주입할 대상이 없으면 오류 발생. 주입할 대상이 없어도 동작하게 하려면
        @Autowired(required = false)로 지정하면 됨.

3. 필드 주입
- 필드에 바로 주입하는 방식
- 특징
    a. 코드가 간결해 많은 개발자들을 유혹ㅎㅎ.. but 외부에서 변경이 불가능해서 테스트 하기 힘들다는 치명적 단점 존재.
    b. DI프레임워크가 없으면 아무것도 할 수 없음.
    c. 사용하지말자 이거임!
    ( 애플리케이션의 실제코드와 관계없는 테스트코드나 설정 @Configuration 등에서만 특별한 용도로 사용)
    참고 : 순수한 자바 테스트 코드에는 당연히 @Autowired가 동작하지 않음.
        @SpringBootTest와 같이 스프링 컨테이너를 테스트에 통합한 경우에만 가능


4. 일반 메서드 주입
- 일반 메서드를 통해서 주입 받을 수 있다.
- 특징
    a. 한번에 여러 필드를 주입 받을 수 있음.
    b. 일반적으로 잘 사용하지 않음